# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .intake_question_optional import IntakeQuestionOptional
from .patient_history_category_enum import PatientHistoryCategoryEnum


class PatientHistoryCategoryOptional(UniversalBaseModel):
    category: typing.Optional[PatientHistoryCategoryEnum] = None
    questions: typing.Optional[typing.List[IntakeQuestionOptional]] = pydantic.Field(default=None)
    """
    Must contain at least one item.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
