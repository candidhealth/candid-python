# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .intervention_category import InterventionCategory
from .lab_optional import LabOptional
from .medication_optional import MedicationOptional


class InterventionOptional(UniversalBaseModel):
    name: typing.Optional[str] = None
    category: typing.Optional[InterventionCategory] = None
    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    "Examples: 'Birth Control LAC', 'Tracking', 'Stress Management', 'Supplement', 'Labs'"
    """

    medication: typing.Optional[MedicationOptional] = pydantic.Field(default=None)
    """
    Required when `type` is `allopathic`.
    """

    labs: typing.Optional[typing.List[LabOptional]] = pydantic.Field(default=None)
    """
    Required when `type` is `tests`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
