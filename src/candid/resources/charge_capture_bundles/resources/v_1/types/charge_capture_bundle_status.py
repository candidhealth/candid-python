# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ChargeCaptureBundleStatus(str, enum.Enum):
    IN_PROGRESS = "in-progress"
    IN_ERROR = "in-error"
    SUCCESSFUL = "successful"
    ABORTED = "aborted"

    def visit(
        self,
        in_progress: typing.Callable[[], T_Result],
        in_error: typing.Callable[[], T_Result],
        successful: typing.Callable[[], T_Result],
        aborted: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ChargeCaptureBundleStatus.IN_PROGRESS:
            return in_progress()
        if self is ChargeCaptureBundleStatus.IN_ERROR:
            return in_error()
        if self is ChargeCaptureBundleStatus.SUCCESSFUL:
            return successful()
        if self is ChargeCaptureBundleStatus.ABORTED:
            return aborted()
