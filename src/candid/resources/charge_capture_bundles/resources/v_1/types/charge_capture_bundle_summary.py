# This file was auto-generated by Fern from our API Definition.

from ......core.pydantic_utilities import UniversalBaseModel
import pydantic
from ......core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ChargeCaptureBundleSummary(UniversalBaseModel):
    charge_capture_unbundled_count: int = pydantic.Field()
    """
    The count of charge captures which are not bundled.
    """

    charge_capture_bundles_in_error_count: int = pydantic.Field()
    """
    The count of charge capture bundles that are in an error state.
    """

    charge_capture_unresolved_change_count: int = pydantic.Field()
    """
    The number of ChargeCapturePostBilledChange items that are unresolved.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
