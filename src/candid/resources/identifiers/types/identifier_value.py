# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ....core.pydantic_utilities import UniversalBaseModel
import typing
from ...commons.types.state import State
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class IdentifierValue_MedicareProviderIdentifier(UniversalBaseModel):
    type: typing.Literal["medicare_provider_identifier"] = "medicare_provider_identifier"
    state: State
    provider_number: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class IdentifierValue_MedicaidProviderIdentifier(UniversalBaseModel):
    type: typing.Literal["medicaid_provider_identifier"] = "medicaid_provider_identifier"
    state: State
    provider_number: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


IdentifierValue = typing.Union[IdentifierValue_MedicareProviderIdentifier, IdentifierValue_MedicaidProviderIdentifier]
