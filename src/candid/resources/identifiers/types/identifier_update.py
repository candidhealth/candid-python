# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
from .identifier_id import IdentifierId
import typing
from .identifier_code import IdentifierCode
from .identifier_value import IdentifierValue
from ...commons.types.removable_date_range_optional_end import RemovableDateRangeOptionalEnd
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class IdentifierUpdate(UniversalBaseModel):
    identifier_id: IdentifierId
    identifier_code: typing.Optional[IdentifierCode] = None
    identifier_value: typing.Optional[IdentifierValue] = None
    period: typing.Optional[RemovableDateRangeOptionalEnd] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
