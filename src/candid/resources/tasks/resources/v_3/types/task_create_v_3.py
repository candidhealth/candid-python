# This file was auto-generated by Fern from our API Definition.

from ......core.pydantic_utilities import UniversalBaseModel
from .....commons.types.encounter_id import EncounterId
from ...commons.types.task_type import TaskType
import typing
from .....commons.types.user_id import UserId
from ...commons.types.task_category import TaskCategory
from .....commons.types.work_queue_id import WorkQueueId
from ......core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TaskCreateV3(UniversalBaseModel):
    encounter_id: EncounterId
    task_type: TaskType
    description: str
    blocks_claim_submission: typing.Optional[bool] = None
    assignee_user_id: typing.Optional[UserId] = None
    category: typing.Optional[TaskCategory] = None
    work_queue_id: WorkQueueId

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
