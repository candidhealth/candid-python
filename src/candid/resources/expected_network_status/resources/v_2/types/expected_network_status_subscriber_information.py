# This file was auto-generated by Fern from our API Definition.

from ......core.pydantic_utilities import UniversalBaseModel
from .....payers.resources.v_3.types.payer_uuid import PayerUuid
import pydantic
from .insurance_type import InsuranceType
from ......core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class ExpectedNetworkStatusSubscriberInformation(UniversalBaseModel):
    payer_uuid: PayerUuid = pydantic.Field()
    """
    The UUID that corresponds with the payer on the patient’s insurance card
    """

    member_id: str = pydantic.Field()
    """
    The member_id on the patient’s insurance card
    """

    insurance_type: InsuranceType = pydantic.Field()
    """
    The insurance information on the patient's insurance card
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
