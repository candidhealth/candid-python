# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .support_state import SupportState


class PayerIds(UniversalBaseModel):
    claims_payer_id: str = pydantic.Field()
    """
    The payer ID for claim submission
    """

    eligibility_payer_id: str = pydantic.Field()
    """
    The payer ID for eligibility
    """

    remittance_payer_id: str = pydantic.Field()
    """
    The payer ID for remittance
    """

    claims_support: SupportState = pydantic.Field()
    """
    The support state for claims submission
    """

    eligibility_support: SupportState = pydantic.Field()
    """
    The support state for eligibility
    """

    remittance_support: SupportState = pydantic.Field()
    """
    The support state for remittance
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
