# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ......core.pydantic_utilities import UniversalBaseModel
import typing
from ......core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from .....commons.types.street_address_short_zip import StreetAddressShortZip


class NonInsurancePayerAddressUpdate_Remove(UniversalBaseModel):
    type: typing.Literal["remove"] = "remove"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class NonInsurancePayerAddressUpdate_Set(UniversalBaseModel):
    value: typing.Optional[StreetAddressShortZip] = None
    type: typing.Literal["set"] = "set"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


NonInsurancePayerAddressUpdate = typing.Union[NonInsurancePayerAddressUpdate_Remove, NonInsurancePayerAddressUpdate_Set]
