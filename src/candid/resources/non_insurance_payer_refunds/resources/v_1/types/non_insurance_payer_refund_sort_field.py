# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class NonInsurancePayerRefundSortField(str, enum.Enum):
    AMOUNT_CENTS = "amount_cents"
    REFUND_TIMESTAMP = "refund_timestamp"
    _UNKNOWN = "__NONINSURANCEPAYERREFUNDSORTFIELD_UNKNOWN__"
    """
    This member is used for forward compatibility. If the value is not recognized by the enum, it will be stored here, and the raw value is accessible through `.value`.
    """

    @classmethod
    def _missing_(cls, value: typing.Any) -> "NonInsurancePayerRefundSortField":
        unknown = cls._UNKNOWN
        unknown._value_ = value
        return unknown

    def visit(
        self,
        amount_cents: typing.Callable[[], T_Result],
        refund_timestamp: typing.Callable[[], T_Result],
        _unknown_member: typing.Callable[[str], T_Result],
    ) -> T_Result:
        if self is NonInsurancePayerRefundSortField.AMOUNT_CENTS:
            return amount_cents()
        if self is NonInsurancePayerRefundSortField.REFUND_TIMESTAMP:
            return refund_timestamp()
        return _unknown_member(self._value_)
