# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ....core.pydantic_utilities import UniversalBaseModel
from .refund_reason import RefundReason
import typing
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RefundReasonUpdate_Set(UniversalBaseModel):
    value: RefundReason
    type: typing.Literal["set"] = "set"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class RefundReasonUpdate_Remove(UniversalBaseModel):
    type: typing.Literal["remove"] = "remove"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


RefundReasonUpdate = typing.Union[RefundReasonUpdate_Set, RefundReasonUpdate_Remove]
