# This file was auto-generated by Fern from our API Definition.

from ........core.pydantic_utilities import UniversalBaseModel
from .....common.types.payer_id import PayerId
import typing
from .....common.types.additional_payer_information import AdditionalPayerInformation
from .authorization_unit import AuthorizationUnit
from .....common.types.period import Period
from ........core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Authorization(UniversalBaseModel):
    payer_id: PayerId
    payer_name: str
    additional_payer_information: typing.Optional[AdditionalPayerInformation] = None
    authorization_number: str
    cpt_code: str
    units: AuthorizationUnit
    quantity: typing.Optional[int] = None
    period: typing.Optional[Period] = None
    notes: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
