# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ........core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....common.types.external_provider import ExternalProvider
from .referral_source import ReferralSource
from .referral_type import ReferralType
from .specialization_category import SpecializationCategory


class OriginationDetail(UniversalBaseModel):
    referral_source: ReferralSource
    referring_provider: typing.Optional[ExternalProvider] = None
    specialization_categories: typing.Optional[typing.List[SpecializationCategory]] = None
    referral_type: typing.Optional[ReferralType] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
