# This file was auto-generated by Fern from our API Definition.

from ........core.pydantic_utilities import UniversalBaseModel
from .....patients.resources.v_1.types.patient import Patient
import typing
from .....coverages.resources.v_1.types.mutable_coverage import MutableCoverage
from .....appointments.resources.v_1.types.mutable_appointment import MutableAppointment
from ........core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class PatientListItem(UniversalBaseModel):
    patient: Patient
    primary_coverage: typing.Optional[MutableCoverage] = None
    next_appointment: typing.Optional[MutableAppointment] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
