# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ........core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class MemberInfo(UniversalBaseModel):
    member_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Stedi requires that you supply at least one of these fields in the request: memberId, dateOfBirth, or lastName.  
    However, each payer has different requirements, so you should supply as many of the fields necessary for each payer 
    to identify the subscriber/dependent in their system.
    """

    first_name: str
    last_name: str
    date_of_birth: typing.Optional[dt.date] = pydantic.Field(default=None)
    """
    Stedi requires that you supply at least one of these fields in the request: memberId, dateOfBirth, or lastName.  
    However, each payer has different requirements, so you should supply as many of the fields necessary for each payer 
    to identify the subscriber/dependent in their system.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
