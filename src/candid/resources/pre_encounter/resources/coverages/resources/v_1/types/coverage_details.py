# This file was auto-generated by Fern from our API Definition.

from ........core.pydantic_utilities import UniversalBaseModel
from .benefit_type import BenefitType
from .coverage_level import CoverageLevel
import pydantic
from .coverage_value_unit import CoverageValueUnit
import typing
from ........core.pydantic_utilities import IS_PYDANTIC_V2


class CoverageDetails(UniversalBaseModel):
    type: BenefitType
    coverage_level: CoverageLevel = pydantic.Field(alias="coverageLevel")
    unit: CoverageValueUnit
    value: float
    additional_notes: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
