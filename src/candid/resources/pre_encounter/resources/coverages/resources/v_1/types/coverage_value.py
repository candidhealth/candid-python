# This file was auto-generated by Fern from our API Definition.

from ........core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ........core.pydantic_utilities import IS_PYDANTIC_V2


class CoverageValue(UniversalBaseModel):
    family: typing.Optional[float] = None
    individual: typing.Optional[float] = None
    employee_and_spouse: typing.Optional[float] = pydantic.Field(alias="employeeAndSpouse", default=None)
    employee_and_children: typing.Optional[float] = pydantic.Field(alias="employeeAndChildren", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
