# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ........core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .coverage_details import CoverageDetails
from .service_coverage_details import ServiceCoverageDetails
from .service_type_code import ServiceTypeCode


class ServiceCoverage(UniversalBaseModel):
    service_code: ServiceTypeCode
    in_network: typing.Optional[ServiceCoverageDetails] = None
    in_network_flat: typing.Optional[typing.List[CoverageDetails]] = None
    out_of_network: typing.Optional[ServiceCoverageDetails] = None
    out_of_network_flat: typing.Optional[typing.List[CoverageDetails]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
