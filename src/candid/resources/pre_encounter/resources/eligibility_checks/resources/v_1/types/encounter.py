# This file was auto-generated by Fern from our API Definition.

from ........core.pydantic_utilities import UniversalBaseModel
import typing
import datetime as dt
import pydantic
from ........core.pydantic_utilities import IS_PYDANTIC_V2


class Encounter(UniversalBaseModel):
    date_of_service: typing.Optional[dt.date] = pydantic.Field(default=None)
    """
    Defaults to the current date if not provided.
    """

    service_type_codes: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Defaults to HealthBenefitPlanCoverage (30) if not provided.
    <Note>Not all payers support multiple service type codes, so it is recommended to only include a single code per request.</Note>
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
