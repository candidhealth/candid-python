# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ........core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....coverages.resources.v_1.types.coverage_benefits import CoverageBenefits
from .....coverages.resources.v_1.types.eligibility_status import EligibilityStatus
from .....coverages.resources.v_1.types.plan_metadata import PlanMetadata


class ParsedResponse(UniversalBaseModel):
    eligibility_status: EligibilityStatus
    plan_metadata: typing.Optional[PlanMetadata] = None
    benefits: typing.Optional[CoverageBenefits] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
