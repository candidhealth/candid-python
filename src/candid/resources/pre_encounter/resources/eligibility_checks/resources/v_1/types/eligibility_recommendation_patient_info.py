# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ........core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....common.types.organization_id import OrganizationId
from .....common.types.patient_id import PatientId


class EligibilityRecommendationPatientInfo(UniversalBaseModel):
    """
    An object representing patient information for an eligibility recommendation.
    This is used to find recommendations. Each field helps us find the right corresponding
    eligibility recommendation for the patient.
    """

    id: typing.Optional[PatientId] = None
    mrn: typing.Optional[str] = None
    organization_id: typing.Optional[OrganizationId] = None
    last_name: typing.Optional[str] = None
    first_name: typing.Optional[str] = None
    date_of_birth: typing.Optional[dt.date] = None
    member_id: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
