# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ........core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .eligibility_check_error import EligibilityCheckError
from .eligibility_request import EligibilityRequest
from .parsed_response import ParsedResponse
from .request_correction import RequestCorrection


class EligibilityCheck(UniversalBaseModel):
    batch_id: typing.Optional[str] = None
    errors: typing.Optional[typing.List[EligibilityCheckError]] = None
    request: typing.Optional[EligibilityRequest] = None
    response: typing.Optional[typing.Any] = None
    parsed_response: typing.Optional[ParsedResponse] = None
    request_corrections: typing.Optional[typing.List[RequestCorrection]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
