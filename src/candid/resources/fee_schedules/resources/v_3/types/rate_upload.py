# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ......core.pydantic_utilities import UniversalBaseModel
import typing
from .dimensions import Dimensions
from .rate_entry import RateEntry
from ......core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from .....commons.types.rate_id import RateId


class RateUpload_NewRate(UniversalBaseModel):
    type: typing.Literal["new_rate"] = "new_rate"
    dimensions: Dimensions
    entries: typing.List[RateEntry]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class RateUpload_NewVersion(UniversalBaseModel):
    type: typing.Literal["new_version"] = "new_version"
    rate_id: RateId
    previous_version: int
    entries: typing.List[RateEntry]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


RateUpload = typing.Union[RateUpload_NewRate, RateUpload_NewVersion]
