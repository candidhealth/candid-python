# This file was auto-generated by Fern from our API Definition.

from ......core.pydantic_utilities import UniversalBaseModel
import typing
from .....organization_providers.resources.v_2.types.license_type import LicenseType
from ......core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class MatchLicenseType(UniversalBaseModel):
    """
    Match information for rendering provider license type
    """

    value: typing.Optional[LicenseType] = None
    match: bool
    explanation: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
