# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ....core.pydantic_utilities import UniversalBaseModel
import typing
from .state import State
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Regions_States(UniversalBaseModel):
    type: typing.Literal["states"] = "states"
    states: typing.List[State]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class Regions_National(UniversalBaseModel):
    type: typing.Literal["national"] = "national"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


Regions = typing.Union[Regions_States, Regions_National]
