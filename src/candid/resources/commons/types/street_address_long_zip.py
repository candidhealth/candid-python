# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from ....core.pydantic_utilities import deep_union_pydantic_dicts
from .street_address_base import StreetAddressBase


class StreetAddressLongZip(StreetAddressBase):
    """
    Examples
    --------
    from candid import State, StreetAddressLongZip

    StreetAddressLongZip(
        address_1="123 Main St",
        address_2="Apt 1",
        city="New York",
        state=State.NY,
        zip_code="10001",
        zip_plus_four_code="1234",
    )
    """

    zip_plus_four_code: str = pydantic.Field()
    """
    4-digit zip add-on code https://en.wikipedia.org/wiki/ZIP_Code#ZIP+4
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic.Extra.forbid
        json_encoders = {dt.datetime: serialize_datetime}
