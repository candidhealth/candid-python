# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ....core.pydantic_utilities import UniversalBaseModel
import typing
from .date import Date
from ....core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RemovableDateRangeOptionalEnd_DateRange(UniversalBaseModel):
    type: typing.Literal["date_range"] = "date_range"
    start_date: Date
    end_date: typing.Optional[Date] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class RemovableDateRangeOptionalEnd_Remove(UniversalBaseModel):
    type: typing.Literal["remove"] = "remove"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


RemovableDateRangeOptionalEnd = typing.Union[
    RemovableDateRangeOptionalEnd_DateRange, RemovableDateRangeOptionalEnd_Remove
]
