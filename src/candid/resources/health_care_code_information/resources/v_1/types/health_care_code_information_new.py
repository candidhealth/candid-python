# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....commons.types.decimal import Decimal
from .code_list_qualifier_code import CodeListQualifierCode
from .date_time_period_format_qualifier import DateTimePeriodFormatQualifier


class HealthCareCodeInformationNew(UniversalBaseModel):
    code_list_qualifier: typing.Optional[CodeListQualifierCode] = None
    industry_code_1: typing.Optional[str] = pydantic.Field(default=None)
    """
    A code string whose interpretation depends on the code_list_qualifier being set.
    You do not need to set this field generally, instead it is provided as advisory
    context on how this HealthCareCodeInformation's data will be available in reporting.
    """

    industry_code_2: typing.Optional[str] = pydantic.Field(default=None)
    """
    A code string whose interpretation depends on the code_list_qualifier being set.
    You do not need to set this field generally, instead it is provided as advisory
    context on how this HealthCareCodeInformation's data will be available in reporting.
    """

    industry_code_3: typing.Optional[str] = pydantic.Field(default=None)
    """
    A code string whose interpretation depends on the code_list_qualifier being set.
    You do not need to set this field generally, instead it is provided as advisory
    context on how this HealthCareCodeInformation's data will be available in reporting.
    """

    industry_code_4: typing.Optional[str] = pydantic.Field(default=None)
    """
    A code string whose interpretation depends on the code_list_qualifier being set.
    You do not need to set this field generally, instead it is provided as advisory
    context on how this HealthCareCodeInformation's data will be available in reporting.
    """

    date_time_period_format_qualifier: typing.Optional[DateTimePeriodFormatQualifier] = pydantic.Field(default=None)
    """
    Controls how the date_time_period field is interpreted and is submitted
    as part of claim process.
    You do not need to set this field generally, instead it is provided as advisory
    context on how this HealthCareCodeInformation's data will be available in reporting.
    """

    date_time_period: typing.Optional[str] = pydantic.Field(default=None)
    """
    A string, formatted according to date_time_period_format_qualifier, which
    ultimately represents the date time period in which an information object
    is covering.
    You do not need to set this field generally, instead it is provided as advisory
    context on how this HealthCareCodeInformation's data will be available in reporting.
    """

    monetary_amount: typing.Optional[Decimal] = pydantic.Field(default=None)
    """
    A decimal used to represent ValueInformation results.
    You do not need to set this field generally, instead it is provided as advisory
    context on how this HealthCareCodeInformation's data will be available in reporting.
    """

    quantity: typing.Optional[Decimal] = pydantic.Field(default=None)
    """
    You do not need to set this field generally, instead it is provided as advisory
    context on how this HealthCareCodeInformation's data will be available in reporting.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
