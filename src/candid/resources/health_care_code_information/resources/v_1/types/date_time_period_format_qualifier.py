# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class DateTimePeriodFormatQualifier(str, enum.Enum):
    CCC = "CC"
    """
    First Two Digits of Year Expressed in Format CCYY
    """

    CCD = "CD"
    """
    Month and Year Expressed in Format MMMYYYY
    """

    CCM = "CM"
    """
    Date in Format CCYYMM
    """

    CCQ = "CQ"
    """
    Date in Format CCYYQ
    """

    CCY = "CY"
    """
    Year Expressed in Format CCYY
    """

    CD_6 = "D6"
    """
    Date Expressed in Format YYMMDD
    """

    CD_8 = "D8"
    """
    Date Expressed in Format CCYYMMDD
    """

    CDA = "DA"
    """
    Range of Dates within a Single Month Expressed in Format DD-DD
    """

    CDB = "DB"
    """
    Date Expressed in Format MMDDCCYY
    """

    CDD = "DD"
    """
    Day of Month in Numeric Format
    """

    CDT = "DT"
    """
    Date and Time Expressed in Format CCYYMMDDHHMM
    """

    CEH = "EH"
    """
    Last Digit of Year and Julian Date Expressed in Format YDDD
    """

    CKA = "KA"
    """
    Date Expressed in Format YYMMMDD
    """

    CMD = "MD"
    """
    Month of Year and Day of Month Expressed in Format MMDD
    """

    CMM = "MM"
    """
    Month of Year in Numeric Format
    """

    CRD = "RD"
    """
    Range of Dates Expressed in Format MMDDCCYY-MMDDCCYY
    """

    CTC = "TC"
    """
    Julian Date Expressed in Format DDD
    """

    CTM = "TM"
    """
    Time Expressed in Format HHMM
    """

    CTQ = "TQ"
    """
    Date Expressed in Format MMYY
    """

    CTR = "TR"
    """
    Date and Time Expressed in Format DDMMYYHHMM
    """

    CTS = "TS"
    """
    Time Expressed in Format HHMMSS
    """

    CTT = "TT"
    """
    Date Expressed in Format MMDDYY
    """

    CTU = "TU"
    """
    Date Expressed in Format YYDDD
    """

    CUN = "UN"
    """
    Unstructured
    """

    CYM = "YM"
    """
    Year and Month Expressed in Format YYMM
    """

    CYY = "YY"
    """
    Last Two Digits of Year Expressed in Format CCYY
    """

    CDDT = "DDT"
    """
    Range of Dates and Time, Expressed in CCYYMMDD-CCYYMMDDHHMM
    """

    CDTD = "DTD"
    """
    Range of Dates and Time, Expressed in CCYYMMDDHHMM-CCYYMMDD
    """

    CDTS = "DTS"
    """
    Range of Date and Time Expressed in Format CCYYMMDDHHMMSS-CCYYMMDDHHMMSS
    """

    CMCY = "MCY"
    """
    MMCCYY
    """

    CRD_2 = "RD2"
    """
    Range of Years Expressed in Format YY-YY
    """

    CRD_4 = "RD4"
    """
    Range of Years Expressed in Format CCYY-CCYY
    """

    CRD_5 = "RD5"
    """
    Range of Years and Months Expressed in Format CCYYMM-CCYYMM
    """

    CRD_6 = "RD6"
    """
    Range of Dates Expressed in Format YYMMDD-YYMMDD
    """

    CRD_8 = "RD8"
    """
    Range of Dates Expressed in Format CCYYMMDD-CCYYMMDD
    """

    CRDM = "RDM"
    """
    Range of Dates Expressed in Format YYMMDD-MMDD
    """

    CRDT = "RDT"
    """
    Range of Date and Time, Expressed in Format CCYYMMDDHHMM-CCYYMMDDHHMM
    """

    CRMD = "RMD"
    """
    Range of Months and Days Expressed in Format MMDD-MMDD
    """

    CRMY = "RMY"
    """
    Range of Years and Months Expressed in Format YYMM-YYMM
    """

    CRTM = "RTM"
    """
    Range of Time Expressed in Format HHMM-HHMM
    """

    CRTS = "RTS"
    """
    Date and Time Expressed in Format CCYYMMDDHHMMSS
    """

    CYMM = "YMM"
    """
    Range of Year and Months, Expressed in CCYYMMM-MMM Format
    """

    _UNKNOWN = "__DATETIMEPERIODFORMATQUALIFIER_UNKNOWN__"
    """
    This member is used for forward compatibility. If the value is not recognized by the enum, it will be stored here, and the raw value is accessible through `.value`.
    """

    @classmethod
    def _missing_(cls, value: typing.Any) -> "DateTimePeriodFormatQualifier":
        unknown = cls._UNKNOWN
        unknown._value_ = value
        return unknown

    def visit(
        self,
        ccc: typing.Callable[[], T_Result],
        ccd: typing.Callable[[], T_Result],
        ccm: typing.Callable[[], T_Result],
        ccq: typing.Callable[[], T_Result],
        ccy: typing.Callable[[], T_Result],
        cd_6: typing.Callable[[], T_Result],
        cd_8: typing.Callable[[], T_Result],
        cda: typing.Callable[[], T_Result],
        cdb: typing.Callable[[], T_Result],
        cdd: typing.Callable[[], T_Result],
        cdt: typing.Callable[[], T_Result],
        ceh: typing.Callable[[], T_Result],
        cka: typing.Callable[[], T_Result],
        cmd: typing.Callable[[], T_Result],
        cmm: typing.Callable[[], T_Result],
        crd: typing.Callable[[], T_Result],
        ctc: typing.Callable[[], T_Result],
        ctm: typing.Callable[[], T_Result],
        ctq: typing.Callable[[], T_Result],
        ctr: typing.Callable[[], T_Result],
        cts: typing.Callable[[], T_Result],
        ctt: typing.Callable[[], T_Result],
        ctu: typing.Callable[[], T_Result],
        cun: typing.Callable[[], T_Result],
        cym: typing.Callable[[], T_Result],
        cyy: typing.Callable[[], T_Result],
        cddt: typing.Callable[[], T_Result],
        cdtd: typing.Callable[[], T_Result],
        cdts: typing.Callable[[], T_Result],
        cmcy: typing.Callable[[], T_Result],
        crd_2: typing.Callable[[], T_Result],
        crd_4: typing.Callable[[], T_Result],
        crd_5: typing.Callable[[], T_Result],
        crd_6: typing.Callable[[], T_Result],
        crd_8: typing.Callable[[], T_Result],
        crdm: typing.Callable[[], T_Result],
        crdt: typing.Callable[[], T_Result],
        crmd: typing.Callable[[], T_Result],
        crmy: typing.Callable[[], T_Result],
        crtm: typing.Callable[[], T_Result],
        crts: typing.Callable[[], T_Result],
        cymm: typing.Callable[[], T_Result],
        _unknown_member: typing.Callable[[str], T_Result],
    ) -> T_Result:
        if self is DateTimePeriodFormatQualifier.CCC:
            return ccc()
        if self is DateTimePeriodFormatQualifier.CCD:
            return ccd()
        if self is DateTimePeriodFormatQualifier.CCM:
            return ccm()
        if self is DateTimePeriodFormatQualifier.CCQ:
            return ccq()
        if self is DateTimePeriodFormatQualifier.CCY:
            return ccy()
        if self is DateTimePeriodFormatQualifier.CD_6:
            return cd_6()
        if self is DateTimePeriodFormatQualifier.CD_8:
            return cd_8()
        if self is DateTimePeriodFormatQualifier.CDA:
            return cda()
        if self is DateTimePeriodFormatQualifier.CDB:
            return cdb()
        if self is DateTimePeriodFormatQualifier.CDD:
            return cdd()
        if self is DateTimePeriodFormatQualifier.CDT:
            return cdt()
        if self is DateTimePeriodFormatQualifier.CEH:
            return ceh()
        if self is DateTimePeriodFormatQualifier.CKA:
            return cka()
        if self is DateTimePeriodFormatQualifier.CMD:
            return cmd()
        if self is DateTimePeriodFormatQualifier.CMM:
            return cmm()
        if self is DateTimePeriodFormatQualifier.CRD:
            return crd()
        if self is DateTimePeriodFormatQualifier.CTC:
            return ctc()
        if self is DateTimePeriodFormatQualifier.CTM:
            return ctm()
        if self is DateTimePeriodFormatQualifier.CTQ:
            return ctq()
        if self is DateTimePeriodFormatQualifier.CTR:
            return ctr()
        if self is DateTimePeriodFormatQualifier.CTS:
            return cts()
        if self is DateTimePeriodFormatQualifier.CTT:
            return ctt()
        if self is DateTimePeriodFormatQualifier.CTU:
            return ctu()
        if self is DateTimePeriodFormatQualifier.CUN:
            return cun()
        if self is DateTimePeriodFormatQualifier.CYM:
            return cym()
        if self is DateTimePeriodFormatQualifier.CYY:
            return cyy()
        if self is DateTimePeriodFormatQualifier.CDDT:
            return cddt()
        if self is DateTimePeriodFormatQualifier.CDTD:
            return cdtd()
        if self is DateTimePeriodFormatQualifier.CDTS:
            return cdts()
        if self is DateTimePeriodFormatQualifier.CMCY:
            return cmcy()
        if self is DateTimePeriodFormatQualifier.CRD_2:
            return crd_2()
        if self is DateTimePeriodFormatQualifier.CRD_4:
            return crd_4()
        if self is DateTimePeriodFormatQualifier.CRD_5:
            return crd_5()
        if self is DateTimePeriodFormatQualifier.CRD_6:
            return crd_6()
        if self is DateTimePeriodFormatQualifier.CRD_8:
            return crd_8()
        if self is DateTimePeriodFormatQualifier.CRDM:
            return crdm()
        if self is DateTimePeriodFormatQualifier.CRDT:
            return crdt()
        if self is DateTimePeriodFormatQualifier.CRMD:
            return crmd()
        if self is DateTimePeriodFormatQualifier.CRMY:
            return crmy()
        if self is DateTimePeriodFormatQualifier.CRTM:
            return crtm()
        if self is DateTimePeriodFormatQualifier.CRTS:
            return crts()
        if self is DateTimePeriodFormatQualifier.CYMM:
            return cymm()
        return _unknown_member(self._value_)
