# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class Rd8Date(UniversalBaseModel):
    start: dt.datetime = pydantic.Field()
    """
    An [RFC 3339, section 5.6 datetime](https://ijmacd.github.io/rfc3339-iso8601/).
    For example, 2017-07-21T17:32:28Z.
    In practice, only the date portion of this is used for claim submission, so
    midnight time is fine.
    """

    end: dt.datetime = pydantic.Field()
    """
    An [RFC 3339, section 5.6 datetime](https://ijmacd.github.io/rfc3339-iso8601/).
    For example, 2017-07-21T17:32:28Z.
    In practice, only the date portion of this is used for claim submission, so
    midnight time is fine.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
