name: ci

on: [push]
jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Bootstrap poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y --version 1.5.1
      - name: Install dependencies
        run: poetry install
      - name: Compile
        run: poetry run mypy .
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Bootstrap poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y --version 1.5.1
      - name: Install dependencies
        run: poetry install

      - name: Test
        run: poetry run pytest -rP .

  publish:
    needs: [compile, test]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Bootstrap poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y --version 1.5.1
      - name: Install dependencies
        run: poetry install
      - name: Publish to pypi
        run: |
          poetry config repositories.remote https://upload.pypi.org/legacy/
          poetry --no-interaction -v publish --build --repository remote --username "$PYPI_USERNAME" --password "$PYPI_PASSWORD"
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

  page-author-on-failure:
    needs: [
      compile,
      test,
      publish,
    ]
    if: ${{ !cancelled() && failure()  }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          sparse-checkout: .github
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies for PagerDuty action
        run: |
          cd .github/actions/pagerduty-alert
          npm install
      - name: Send PagerDuty Alert
        uses: ./.github/actions/pagerduty-alert
        id: pagerduty-alert
        with:
          pagerduty-api-key: "${{ secrets.PAGERDUTY_API_KEY }}"
          pagerduty-service-id:  "${{ secrets.PAGERDUTY_SERVICE_ID }}"
          pagerduty-user-id: "${{ secrets.PAGERDUTY_USER_ID }}"
          pagerduty-user-email: "${{ secrets.PAGERDUTY_USER_EMAIL }}"